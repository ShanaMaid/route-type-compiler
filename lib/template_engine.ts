import typeTemplate from './type_template';
import * as fs from 'fs-extra';
import * as path from 'path';
import * as process from 'process';

class TemplateEngine {
  /**
   * type 文件输出路径
   * 
   * @private
   * @type {string}
   * @memberof TemplateEngine
   */
  private output: string;
  //private template: string;
  private templatePool: {
    importPool: any[];
    instancePool: any[];
    getRoutePool: any[];
    postRoutePool: any[];
  };

  constructor(filePathList: Array<string>, input: string, output: string) {
    this.output = output;
    this.templatePool = typeTemplate(filePathList, input);
  }

  compile(moduleName: string, version: string) {
    const template = this.getTemplate(moduleName, version);
    const typeFilePath = path.join(process.cwd(), this.output, './index.d.ts');
    fs.ensureFileSync(typeFilePath);
    fs.writeFileSync(typeFilePath, template)
  }

  private getTemplate(moduleName: string, version: string): string {
    return `${this.getHeadCommet(version)}

${this.importTemplate}

${this.getModuleTemplate(moduleName)}`
  }

  private getHeadCommet(version) {
    this.output;
    return `/*
* Autogenerated by Route Type Compiler (${version})
*
* DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
*/`;
  }

  private get importTemplate() {
    return this.templatePool.importPool.join('\n');
  }

  private get instanceTemplate() {
    return this.templatePool.instancePool.join('\n  ');
  }

  private get getRouteTemplate() {
    return this.templatePool.getRoutePool.join(',\n    ');
  }

  private get postRouteTemplate() {
    return this.templatePool.postRoutePool.join(',\n    ');
  }

  private getModuleTemplate(moduleName) {
    return `declare module '${moduleName}' {
  ${this.instanceTemplate}
  export interface IGetRoute {
    ${this.getRouteTemplate}
  }
  export interface IPostRoute {
    ${this.postRouteTemplate}
  }
}
`;
  }

}

export default TemplateEngine;
